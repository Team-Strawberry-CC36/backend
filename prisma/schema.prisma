// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users_accounts {
  id Int @id @default(autoincrement())
  username    String        @db.VarChar(255)
  created_at   DateTime      @default(now())
  experiences  Experiences[]
}

model Experiences {
  id              Int      @id @default(autoincrement())
  place_id        Int
  user_id         Int
  experience      String   @db.Text
  place_etiquette_id Int?
  created_at      DateTime @default(now())
  edited_at       DateTime @default(now())
  users_accounts Users_accounts @relation(fields: [user_id], references: [id])
  place Places @relation(fields: [place_id], references: [id])
}

model Places {
  id           Int      @id @default(autoincrement())
  place_type   PlaceType     @default(ONSEN)
  name         String   @db.VarChar(255)
  address      String   @db.VarChar(255)
  latitude     Decimal @db.Decimal(9, 6)
  longitude    Decimal @db.Decimal(9, 6)
  google_place_id String @unique @db.VarChar(255)
  website_uri String? @db.Text
  formatted_address String? @db.VarChar(255)
  general_info String   @db.Text
  created_at   DateTime @default(now())
  edited_at    DateTime @default(now())
  experiences Experiences[]
  images Images[]
}

enum PlaceType {
  SHRINE
  ONSEN
  RESTAURANT
}

model Images {
  id Int @id @default(autoincrement())
  place_id Int
  author_name String @db.VarChar()
  file_data String @db.Text
  place Places @relation(fields: [place_id], references: [id], onDelete: Cascade)
}

model Place_etiquette {
  id        Int     @id @default(autoincrement())
  place_id  Int
  etiquette_id Int
}

model Etiquette {
  id    Int    @id @default(autoincrement())
  label String @db.VarChar()
}
