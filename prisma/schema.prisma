generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users_accounts {
  id Int @id @default(autoincrement())
  username    String        @db.VarChar(255)
  // Time values
  created_at   DateTime      @default(now())
  // Relationships
  experiences  Experiences[]
}

model Experiences {
  id              Int      @id @default(autoincrement())
  place_id        Int
  user_id         Int
  experience      String   @db.Text
  // Time values
  visited_at      DateTime @default(now())
  created_at      DateTime @default(now())
  edited_at       DateTime @default(now())
  // Relationships
  etiquettes Etiquette_per_experiences[]
  users_accounts Users_accounts @relation(fields: [user_id], references: [id])
  place Places @relation(fields: [place_id], references: [id])
}

model Places {
  id           Int      @id @default(autoincrement())
  place_type   PlaceType
  name         String   @db.VarChar(255)
  address      String   @db.VarChar(255)
  latitude     Decimal @db.Decimal(9, 6)
  longitude    Decimal @db.Decimal(9, 6)
  google_place_id String @unique @db.VarChar(255)
  website_uri String? @db.Text
  formatted_address String? @db.VarChar(255)
  general_info String   @db.Text
  // Time values
  created_at   DateTime @default(now())
  edited_at    DateTime @default(now())
  // Experiences
  experiences Experiences[]
  images Images[]
  etiquettes Etiquettes_per_places[]
}

model Images {
  id Int @id @default(autoincrement())
  place_id Int
  author_name String @db.VarChar()
  file_data String @db.Text
  // Relationships
  place Places @relation(fields: [place_id], references: [id], onDelete: Cascade)
}

model Etiquettes_per_places {
  id        Int     @id @default(autoincrement())
  place_id  Int
  etiquette_id  Int
  status EtiquetteStatus
  // Relationships
  etiquette Etiquette @relation(fields: [etiquette_id], references: [id])
  places Places @relation(fields: [place_id], references: [id])
}

model Etiquette_per_experiences {
  id  Int @id @default(autoincrement())
  experience_id Int
  etiquette_id Int
  // Relationships
  experience Experiences @relation(fields: [experience_id], references: [id])
  etiquette Etiquette @relation(fields: [etiquette_id], references: [id])
}

model Etiquette {
  id    Int    @id @default(autoincrement())
  place_id Int
  label String @db.VarChar()
  place_type PlaceType
  // Relationships
  EtiquettePerPlaces Etiquettes_per_places[]
  EtiquettePerExperience Etiquette_per_experiences[]
}

// Enums
enum PlaceType {
  SHRINE
  ONSEN
  RESTAURANT
}

enum EtiquetteStatus {
  ALLOWED
  NOT_ALLOWED
}